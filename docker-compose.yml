services:
  postgres:
    image: postgres:16-alpine
    container_name: terrace-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-terrace}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-terrace_dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-terrace}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-terrace}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - terrace-network

  adminer:
    image: adminer:latest
    container_name: terrace-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - terrace-network
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_USERNAME: ${POSTGRES_USER:-terrace}
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-terrace_dev_password}
      ADMINER_DEFAULT_DB: ${POSTGRES_DB:-terrace}

  chromadb:
    image: chromadb/chroma
    container_name: terrace-chromadb
    restart: unless-stopped
    ports:
      - "${CHROMA_PORT:-8000}:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - terrace-network

networks:
  terrace-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  chromadb_data:
    driver: local
